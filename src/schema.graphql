type Query {
    me: AuthPayload
    profile: UserProfile!
}

type Mutation {
    register(data: CreateUserInput!): Boolean!
    login(email: String!, password: String!, rememberMe: Boolean!): Boolean!
    updateProfile(data: UpdateUserInput!): Boolean!
    changePassword(currentPassword: String!, newPassword: String): Boolean!
    logout: Boolean!
    forgotPassword(email: String!): Boolean!
    resetPassword(token: String!, password: String!): Boolean!
}

type User {
    id: ID!
    email: String!
    password: String!
    name: String!
    companyName: String
    mobile: String
    verified: Boolean!
    updatedAt: String!
    createdAt: String!
}

type AuthPayload {
    id: ID!
    name: String!
}

type UserProfile {
    id: ID!
    name: String!
    mobile: String
    companyName: String
    verified: Boolean!
}

input CreateUserInput {
    email: String!
    password: String!
    name: String!
    companyName: String
    mobile: String
}

input LoginUserInput {
    email: String!
    password: String!
}

input UpdateUserInput {
    name: String
    companyName: String
    mobile: String
}